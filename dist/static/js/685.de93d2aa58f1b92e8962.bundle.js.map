{"version":3,"file":"static/js/685.de93d2aa58f1b92e8962.bundle.js","mappings":"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","sources":["webpack://budgie2.4/./src/components/Tab/Tab.jsx","webpack://budgie2.4/./src/pages/QR/UpiCard.jsx","webpack://budgie2.4/./src/pages/QR/activeQrList.jsx","webpack://budgie2.4/./src/pages/QR/qrStatusAccordion.jsx","webpack://budgie2.4/./src/pages/QR/qrCodeRequests.jsx","webpack://budgie2.4/./src/pages/QR/index.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Tabs, { tabsClasses } from \"@mui/material/Tabs\";\r\nimport Tab from \"@mui/material/Tab\";\r\nimport { styled } from \"@mui/system\";\r\nimport { Typography } from \"@mui/material\";\r\n\r\nconst StyledBox = styled(Box)({\r\n  boxShadow: `\r\n    0px 4px 12px 4px #E9E9E980, \r\n  `,\r\n  borderRadius: \"4px\",\r\n  maxWidth: \"90%\",\r\n});\r\n\r\nconst CustomTab = styled((props) => <Tab disableRipple {...props} />)(\r\n  ({ theme }) => ({\r\n    textTransform: \"none\",\r\n    padding: \"0px\",\r\n    minWidth: \"auto\",\r\n  })\r\n);\r\n\r\nconst TabLabel = styled(\"span\")(({ theme }) => ({\r\n  fontSize: 14,\r\n  fontWeight: 600,\r\n  lineHeight: \"16.8px\",\r\n  fontFamily: \"Lato,sans-serif\",\r\n  padding: \"12px 16px 12px 16px\",\r\n  display: \"inline-block\",\r\n  height: \"42px\",\r\n  whiteSpace: \"nowrap\",\r\n  width: \"208px\", // Set width to auto to fit content\r\n  \"&.Mui-selected\": {\r\n    backgroundColor: \"#42794A\",\r\n    color: \"white\",\r\n    borderRadius: \"4px\",\r\n  },\r\n  \"&:not(.Mui-selected)\": {\r\n    backgroundColor: \"white\",\r\n    color: \"#42794A\",\r\n  },\r\n}));\r\n\r\nconst TabPanel = ({ value, index, children }) => {\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-auto-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-auto-tab-${index}`}\r\n    >\r\n      {value === index && <Box>{children}</Box>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function ScrollableTabsButtonVisible({ tabs = [], title }) {\r\n  const [value, setValue] = useState(0);\r\n  const showScrollButtons = tabs.length > 3; // Adjust the number as needed\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          padding: \"0px 0px 0px 16px\",\r\n          position: \"relative\",\r\n          marginBottom: \"20px\",\r\n        }}\r\n      >\r\n        <Typography\r\n          variant=\"h3\"\r\n          component=\"h3\"\r\n          sx={{ fontWeight: 700, width: \"auto\", fontSize: \"28px !important\" }}\r\n        >\r\n          {title}\r\n        </Typography>\r\n\r\n        <StyledBox\r\n          sx={{\r\n            bgcolor: (theme) => theme.palette.BudgieThemeColor.BaseWhite,\r\n            marginLeft: 2,\r\n            maxWidth: showScrollButtons ? \"100%\" : \"calc(100% - 40px)\", // Add space if scroll buttons are not visible\r\n            overflow: \"hidden\", // Prevent overflow\r\n          }}\r\n        >\r\n          <Tabs\r\n            value={value}\r\n            onChange={handleChange}\r\n            TabIndicatorProps={{ sx: { transition: \"none\" } }}\r\n            variant=\"scrollable\"\r\n            scrollButtons={showScrollButtons ? \"auto\" : false}\r\n            aria-label=\"visible arrows tabs example\"\r\n            sx={{\r\n              [`& .${tabsClasses.scrollButtons}`]: {\r\n                display: showScrollButtons ? \"flex\" : \"none\",\r\n                \"&.Mui-disabled\": { opacity: 0.3 },\r\n              },\r\n              \"& .MuiTabs-indicator\": {\r\n                display: \"none\",\r\n              },\r\n              width: \"100%\",\r\n              overflowX: \"auto\", // Add horizontal scrolling if needed\r\n              display: \"flex\",\r\n              justifyContent: \"flex-start\", // Align tabs to start\r\n              flexWrap: \"nowrap\", // Prevent wrapping\r\n            }}\r\n          >\r\n            {tabs.map((tab, index) => (\r\n              <CustomTab\r\n                key={index}\r\n                {...tab.props}\r\n                label={\r\n                  <TabLabel className={value === index ? \"Mui-selected\" : \"\"}>\r\n                    {tab.label}\r\n                  </TabLabel>\r\n                }\r\n              />\r\n            ))}\r\n          </Tabs>\r\n        </StyledBox>\r\n      </Box>\r\n      {tabs.map((tab, index) => (\r\n        <TabPanel value={value} index={index} key={index}>\r\n          {tab.component}\r\n        </TabPanel>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport {\r\n    Box,\r\n    Container,\r\n    Typography,\r\n    Button,\r\n    Card,\r\n    CardContent,\r\n    Grid,\r\n    styled,\r\n    IconButton,\r\n    Snackbar,\r\n    Alert\r\n} from '@mui/material';\r\nimport {\r\n    QrCode,\r\n    Download,\r\n    Share,\r\n    ContentCopy\r\n} from '@mui/icons-material';\r\nimport logo from \"../../assets/img/Group 17.png\";\r\n\r\n// Styled Components\r\n\r\n\r\nconst ContentCard = styled(Card)(({ theme }) => ({\r\n    padding: theme.spacing(3),\r\n    borderRadius: '16px',\r\n    marginBottom: theme.spacing(3),\r\n    backgroundColor: '#FFFFFF',\r\n    border: '1px solid #E0E0E0',\r\n}));\r\n\r\nconst UpiCard = () => {\r\n    const [openSnackbar, setOpenSnackbar] = useState(false);\r\n\r\n    const handleCopyUpiId = () => {\r\n        navigator.clipboard.writeText('9876543210sqpay');\r\n        setOpenSnackbar(true);\r\n    };\r\n\r\n    const handleCloseSnackbar = () => {\r\n        setOpenSnackbar(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <ContentCard>\r\n                <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n                    <Box\r\n                        component=\"img\"\r\n                        src={logo}\r\n                        alt=\"logo\"\r\n                        sx={{\r\n                            width: \"72.00029754638672px\",\r\n                            height: \"62.000267028808594\",\r\n                            mb: 3,\r\n\r\n\r\n                        }}\r\n                    />\r\n                    <Box\r\n                        component=\"img\"\r\n                        src={`https://api.qrserver.com/v1/create-qr-code/?size=150x150&data=9876543210sqpay`}\r\n                        alt=\"QR Code\"\r\n                        sx={{\r\n                            width: \"426px\",\r\n                            height: \"426px\",\r\n                            mb: 3,\r\n\r\n                        }}\r\n                    />\r\n\r\n                    <Box display=\"flex\" alignItems=\"center\" mb={1}>\r\n                        <Typography variant=\"h6\" sx={{ fontSize: '20px', fontWeight: \"700\", fontStyle: \"bold\", lineHeight: \"100%\", letterSpacing: \"0%\" }}>\r\n                            UPI ID: 9876543210sqpay\r\n                        </Typography>\r\n                        <IconButton\r\n                            onClick={handleCopyUpiId}\r\n                            size=\"small\"\r\n                            sx={{ ml: 1, color: '#42794A' }}\r\n                        >\r\n                            <ContentCopy fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </Box>\r\n\r\n                    <Typography variant=\"body2\" color=\"text.secondary\" sx={{ fontWeight: \"500\", fontStyle: \"medium\", fontSize: \"16px\", lineHeight: \"18px\", letterSpacing: \"0%\" }} gutterBottom>\r\n                        liuaiim Mohamraddi\r\n                    </Typography>\r\n\r\n                    <Box display=\"flex\" gap={2} mt={3}>\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            startIcon={<Download />}\r\n                            sx={{\r\n                                borderColor: '#EEEEEE',\r\n                                color: '#252525',\r\n                                backgroundColor: '#EEEEEE',\r\n                                borderRadius: '8px',\r\n                                textTransform: 'none',\r\n                                height: \"56px\",\r\n                                width: \"204px\",\r\n                                px: 2,\r\n                                '&:hover': {\r\n                                    borderColor: '#EEEEEE',\r\n                                    backgroundColor: 'rgba(66, 121, 74, 0.04)'\r\n                                },\r\n                                padding: '16px 12px 16px 12px'\r\n                            }}\r\n                        >\r\n                            Download\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            startIcon={<Share />}\r\n                            sx={{\r\n                                borderColor: '#EEEEEE',\r\n                                color: '#252525',\r\n                                backgroundColor: '#EEEEEE',\r\n                                borderRadius: '8px',\r\n                                textTransform: 'none',\r\n                                height: \"56px\",\r\n                                width: \"204px\",\r\n                                px: 2,\r\n                                '&:hover': {\r\n                                    borderColor: '#EEEEEE',\r\n                                    backgroundColor: 'rgba(66, 121, 74, 0.04)'\r\n                                },\r\n                                padding: '16px 12px 16px 12px'\r\n                            }}\r\n                        >\r\n                            Share\r\n                        </Button>\r\n                    </Box>\r\n                </Box>\r\n            </ContentCard>\r\n\r\n            <Snackbar\r\n                open={openSnackbar}\r\n                autoHideDuration={2000}\r\n                onClose={handleCloseSnackbar}\r\n                anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n            >\r\n                <Alert onClose={handleCloseSnackbar} severity=\"success\" sx={{ width: '100%' }}>\r\n                    UPI ID copied to clipboard!\r\n                </Alert>\r\n            </Snackbar>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UpiCard;","import React from 'react';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  IconButton,\r\n  styled\r\n} from '@mui/material';\r\nimport {\r\n  ChevronRight\r\n} from '@mui/icons-material';\r\n\r\n// Styled Components\r\nconst QrListCard = styled(Card)(({ theme }) => ({\r\n  padding: theme.spacing(2),\r\n  borderRadius: '16px',\r\n  backgroundColor: '#FFFFFF',\r\n  border: '1px solid #E0E0E0',\r\n  marginBottom: theme.spacing(2),\r\n  cursor: 'pointer',\r\n  transition: 'all 0.2s ease-in-out',\r\n  '&:hover': {\r\n    boxShadow: '0px 4px 12px rgba(0, 0, 0, 0.1)',\r\n    transform: 'translateY(-2px)'\r\n  },\r\n}));\r\n\r\nconst ActiveQrList = () => {\r\n  const qrCodes = [\r\n    {\r\n      id: 'Q201946579',\r\n      description: 'All Marketing Sales-MS1903041i55331648980231',\r\n      terminal: 'Terminal 1'\r\n    },\r\n    {\r\n      id: 'Q201946580',\r\n      description: 'All Marketing Sales-MS1903041i55331648980232',\r\n      terminal: 'Terminal 2'\r\n    },\r\n    {\r\n      id: 'Q201946581',\r\n      description: 'All Marketing Sales-MS1903041i55331648980233',\r\n      terminal: 'Terminal 3'\r\n    },\r\n    {\r\n      id: 'Q201946582',\r\n      description: 'All Marketing Sales-MS1903041i55331648980234',\r\n      terminal: 'Terminal 4'\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Box>\r\n      {qrCodes.map((qr, index) => (\r\n        <QrListCard key={index} variant=\"outlined\">\r\n          <CardContent sx={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            padding: '16px !important',\r\n            '&:last-child': { paddingBottom: '16px' }\r\n          }}>\r\n            <CardContent sx={{\r\n              width: \"96px\",\r\n              height: \"96px\",\r\n              border: '1.33px solid #e0e0e0',\r\n              borderRadius: '10.67px',\r\n              marginRight: '16px'\r\n            }}>\r\n              <Box\r\n                component=\"img\"\r\n                src={`https://api.qrserver.com/v1/create-qr-code/?size=50x50&data=${qr.id}`}\r\n                alt=\"QR Code\"\r\n                sx={{ width: \"74.66666412353516px\", height: \"74.66666412353516px\", padding:\"0px 10.67px 10.67px 0px\" }}\r\n\r\n              />\r\n            </CardContent>\r\n\r\n\r\n            <Box sx={{ flexGrow: 1, gap: '8px' }}>\r\n              <Typography variant=\"h6\" gutterBottom sx={{ color: '#252525', fontWeight: \"600\", fontStyle: \"Semibold\", fontSize: \"20px\", lineHeight: \"100%\", letterSpacing: \"0%\", horizontalAlign: \"Right\" }}>\r\n                {qr.id}\r\n              </Typography>\r\n              <Typography variant=\"body2\" sx={{ fontWeight: \"500\", color: \"#252525\", fontSize: \"16px\", lineHeight: \"100%\", letterSpacing: \"0%\", fontStyle: \"medium\" }} color=\"text.secondary\" gutterBottom>\r\n                {qr.description}\r\n              </Typography>\r\n              <Typography variant=\"body2\" sx={{ fontWeight: \"500\", color: \"#999999\", fontSize: \"16px\", lineHeight: \"100%\", letterSpacing: \"0%\", fontStyle: \"medium\" }}>\r\n                {qr.terminal}\r\n              </Typography>\r\n            </Box>\r\n\r\n            <IconButton size=\"small\" sx={{ color: '#42794A' }}>\r\n              <ChevronRight />\r\n            </IconButton>\r\n          </CardContent>\r\n        </QrListCard>\r\n      ))}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ActiveQrList;","import React, { useState } from 'react';\r\nimport {\r\n    Box,\r\n    Accordion,\r\n    AccordionSummary,\r\n    AccordionDetails,\r\n    Typography,\r\n    Radio,\r\n    RadioGroup,\r\n    FormControlLabel,\r\n    styled\r\n} from '@mui/material';\r\nimport {\r\n    ExpandMore,\r\n    CheckCircle\r\n} from '@mui/icons-material';\r\n\r\nconst StatusAccordion = styled(Accordion)(({ theme }) => ({\r\n    marginTop: theme.spacing(1),\r\n    borderRadius: '8px',\r\n    border: '1px solid #E0E0E0',\r\n    boxShadow: 'none',\r\n    '&:before': {\r\n        display: 'none',\r\n    },\r\n}));\r\n\r\nconst SelectedStatus = styled(Box)(({ theme }) => ({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(1),\r\n    borderRadius: '6px',\r\n    backgroundColor: '#E8F5E9',\r\n    marginRight: theme.spacing(1),\r\n}));\r\n\r\nconst StatusText = styled(Typography)({\r\n    fontWeight: 'bold',\r\n    color: '#2E7D32',\r\n    marginLeft: '8px',\r\n});\r\n\r\nconst StatusOption = styled(FormControlLabel)(({ theme }) => ({\r\n    marginLeft: 0,\r\n    marginRight: 0,\r\n    padding: theme.spacing(1),\r\n    borderRadius: '4px',\r\n    width: '100%',\r\n    '&:hover': {\r\n        backgroundColor: '#f5f5f5',\r\n    },\r\n    '& .MuiFormControlLabel-label': {\r\n        fontSize: '14px',\r\n    },\r\n}));\r\n\r\nconst QrStatusAccordion = () => {\r\n    const [expanded, setExpanded] = useState(false);\r\n    const [selectedStatus, setSelectedStatus] = useState('QR Request Accepted');\r\n\r\n    const handleAccordionChange = (event, isExpanded) => {\r\n        setExpanded(isExpanded);\r\n    };\r\n\r\n    const handleStatusChange = (event) => {\r\n        setSelectedStatus(event.target.value);\r\n    };\r\n\r\n    const statuses = [\r\n        { id: 'qr-accepted', label: 'QR Request Accepted' },\r\n        { id: 'awaiting-production', label: 'Awaiting Production' },\r\n        { id: 'awaiting-dispatch', label: 'Awaiting Dispatch' },\r\n        { id: 'awaiting-delivery', label: 'Awaiting Delivery' },\r\n    ];\r\n\r\n    return (\r\n        <StatusAccordion expanded={expanded} onChange={handleAccordionChange}>\r\n            <AccordionSummary\r\n                expandIcon={<ExpandMore />}\r\n                aria-controls=\"status-content\"\r\n                id=\"status-header\"\r\n                sx={{ minHeight: 'auto', padding: '8px 16px' }}\r\n            >\r\n                <Box sx={{ display: 'flex', alignItems: 'center', width: '100%' }}>\r\n\r\n                    <SelectedStatus>\r\n                        <CheckCircle sx={{ color: '#4CAF50', fontSize: 20 }} />\r\n                        <StatusText variant=\"body2\">\r\n                            {selectedStatus}\r\n                        </StatusText>\r\n                    </SelectedStatus>\r\n                </Box>\r\n            </AccordionSummary>\r\n            <AccordionDetails sx={{ padding: '0 16px 16px' }}>\r\n                <RadioGroup\r\n                    value={selectedStatus}\r\n                    onChange={handleStatusChange}\r\n                >\r\n                    {statuses.map((status) => (\r\n                        <StatusOption\r\n                            key={status.id}\r\n                            value={status.label}\r\n                            control={<Radio size=\"small\" />}\r\n                            label={status.label}\r\n                        />\r\n                    ))}\r\n                </RadioGroup>\r\n            </AccordionDetails>\r\n        </StatusAccordion>\r\n    );\r\n};\r\n\r\nexport default QrStatusAccordion;","import React, { useState } from 'react';\r\nimport {\r\n    Box,\r\n    Card,\r\n    CardContent,\r\n    Typography,\r\n\r\n    styled,\r\n    Chip\r\n} from '@mui/material';\r\n\r\nimport QrStatusAccordion from './qrStatusAccordion';\r\nconst RequestCard = styled(Card)(({ theme }) => ({\r\n    marginBottom: theme.spacing(2),\r\n    borderRadius: '12px',\r\n    border: '1px solid #E0E0E0',\r\n    boxShadow: 'none',\r\n    width: '100%',\r\n    maxWidth: '600px',\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst QrCodeRequests = () => {\r\n    const requests = [\r\n        {\r\n            id: 1,\r\n            title: \"All Marketing Sales\",\r\n            address: \"45, Binomini Nagan, VOC Port Authority, Turkenth, 626002\",\r\n            date: \"Requested on 26.04.202\",\r\n            status: \"Accepted\",\r\n        },\r\n        {\r\n            id: 2,\r\n            title: \"All Marketing Sales\",\r\n            address: \"45, Binomini Nagan, VOC Port Authority, Turkenth, 626002\",\r\n            date: \"Requested on 26.04.202\",\r\n            status: \"Accepted\",\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Box sx={{ padding: '16px' }}>\r\n            {requests.map((request) => (\r\n                <RequestCard key={request.id} variant=\"outlined\">\r\n                    <CardContent sx={{ padding: '16px !important' }}>\r\n                        <Box sx={{ display: 'flex' }}>\r\n                            <Box\r\n                                sx={{\r\n                                    width: \"96px\",\r\n                                    height: \"96px\",\r\n                                    border: '1.33px solid #e0e0e0',\r\n                                    borderRadius: '10.67px',\r\n                                    display: 'flex',\r\n                                    alignItems: 'center',\r\n                                    justifyContent: 'center',\r\n                                    marginRight: '16px',\r\n                                    flexShrink: 0\r\n                                }}\r\n                            >\r\n                                <Box\r\n                                    component=\"img\"\r\n                                    src={`https://api.qrserver.com/v1/create-qr-code/?size=74x74&data=Request-${request.id}`}\r\n                                    alt=\"QR Code\"\r\n                                    sx={{\r\n                                        width: \"74.67px\",\r\n                                        height: \"74.67px\",\r\n                                    }}\r\n                                />\r\n                            </Box>\r\n\r\n                            {/* Text Content */}\r\n                            <Box sx={{ flexGrow: 1 }}>\r\n                                <Typography variant=\"subtitle1\" fontWeight=\"bold\" gutterBottom>\r\n                                    {request.title}\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\r\n                                    {request.address}\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\r\n                                    {request.date}\r\n                                </Typography>\r\n\r\n                            </Box>\r\n                        </Box>\r\n\r\n                        <QrStatusAccordion />\r\n                    </CardContent>\r\n                </RequestCard>\r\n            ))}\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default QrCodeRequests;","\r\n\r\nimport React, { useState } from 'react';\r\nimport {\r\n    Box,\r\n    Container,\r\n    Typography,\r\n    Button,\r\n    Card,\r\n    CardContent,\r\n    Grid,\r\n    styled,\r\n    Tabs,\r\n    Tab,\r\n    Divider\r\n} from '@mui/material';\r\nimport {\r\n    QrCode,\r\n   \r\n} from '@mui/icons-material';\r\nimport ScrollableTabsButtonVisible from \"@/components/Tab/Tab\";\r\nimport UpiCard from '@/pages/QR/UpiCard';\r\nimport ActiveQrList from './activeQrList';\r\nimport QrCodeRequests from './qrCodeRequests';\r\n\r\n\r\n\r\n// Styled Components\r\nconst PageContainer = styled(Container)(({ theme }) => ({\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#f5f5f5',\r\n}));\r\n\r\nconst HeaderCard = styled(Card)(({ theme }) => ({\r\n    padding: theme.spacing(3),\r\n    borderRadius: '16px',\r\n    marginBottom: theme.spacing(3),\r\n    background: 'linear-gradient(90deg, #42794A 0%, #61CE70 100%)',\r\n    color: 'white',\r\n}));\r\n\r\nconst ContentCard = styled(Card)(({ theme }) => ({\r\n    padding: theme.spacing(3),\r\n    borderRadius: '16px',\r\n    marginBottom: theme.spacing(3),\r\n    backgroundColor: '#FFFFFF',\r\n    border: '1px solid #E0E0E0',\r\n}));\r\n\r\nconst RequestCard = styled(Box)(({ theme }) => ({\r\n    padding: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n    border: '1px solid #E0E0E0',\r\n    borderRadius: '8px',\r\n}));\r\n\r\nconst StatusChip = styled(Box)(({ theme }) => ({\r\n    display: 'inline-flex',\r\n    alignItems: 'center',\r\n    backgroundColor: '#E8F5E9',\r\n    color: '#2E7D32',\r\n    padding: '4px 8px',\r\n    borderRadius: '16px',\r\n    fontSize: '12px',\r\n    fontWeight: 'bold',\r\n    marginTop: theme.spacing(1),\r\n}));\r\n\r\nconst ManageQrPos = () => {\r\n    const tabs = [\r\n        { label: 'Active QR Codes', component: <ActiveQrList /> },\r\n        { label: 'QR Code Requests', component: <QrCodeRequests /> },\r\n    ];\r\n\r\n\r\n\r\n\r\n    return (\r\n        <PageContainer>\r\n            <HeaderCard>\r\n                <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n                    <Box display=\"flex\" alignItems=\"center\">\r\n                        <QrCode sx={{ fontSize: 32, mr: 1.5 }} />\r\n                        <Box>\r\n                            <Typography variant=\"h5\" fontWeight=\"bold\">\r\n                                Manage QR/POS\r\n                            </Typography>\r\n                        </Box>\r\n                    </Box>\r\n                </Box>\r\n            </HeaderCard>\r\n\r\n            <Grid container spacing={1}>\r\n                <Grid item xs={12} md={6}>\r\n                    <UpiCard />\r\n                </Grid>\r\n\r\n                <Grid item xs={12} md={6}>\r\n\r\n                    <ContentCard>\r\n                        <ScrollableTabsButtonVisible tabs={tabs} />\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            fullWidth\r\n                            sx={{\r\n                                py: 1.5,\r\n                                bgcolor: '#42794A',\r\n                                fontWeight: 'bold',\r\n                                '&:hover': {\r\n                                    bgcolor: '#42794A'\r\n                                },\r\n                                flexFlow: \"HORIZONTAL\",\r\n                                height: \"56px\",\r\n                                borderRadius: \"12px\",\r\n                                padding: \"16px 24px 16px 24px\",\r\n                            }}\r\n                        >\r\n                            Request more QR Codes\r\n                        </Button>\r\n\r\n\r\n                    </ContentCard>\r\n                </Grid>\r\n            </Grid>\r\n        </PageContainer>\r\n    );\r\n};\r\n\r\nexport default ManageQrPos;"],"names":["StyledBox","styled","Box","boxShadow","borderRadius","maxWidth","CustomTab","props","React","Tab","_extends","disableRipple","_ref","theme","textTransform","padding","minWidth","TabLabel","_ref2","fontSize","fontWeight","lineHeight","fontFamily","display","height","whiteSpace","width","backgroundColor","color","TabPanel","_ref3","value","index","children","role","hidden","id","ScrollableTabsButtonVisible","_ref4","tabs","title","setValue","useState","showScrollButtons","length","sx","alignItems","position","marginBottom","Typography","variant","component","bgcolor","palette","BudgieThemeColor","BaseWhite","marginLeft","overflow","Tabs","onChange","handleChange","event","newValue","TabIndicatorProps","transition","scrollButtons","tabsClasses","opacity","overflowX","justifyContent","flexWrap","map","tab","key","label","className","ContentCard","Card","spacing","border","UpiCard","openSnackbar","setOpenSnackbar","handleCloseSnackbar","flexDirection","src","logo","alt","mb","fontStyle","letterSpacing","IconButton","onClick","handleCopyUpiId","navigator","clipboard","writeText","size","ml","ContentCopy","gutterBottom","gap","mt","Button","startIcon","Download","borderColor","px","Share","Snackbar","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","Alert","severity","QrListCard","cursor","transform","ActiveQrList","description","terminal","qr","CardContent","paddingBottom","marginRight","flexGrow","horizontalAlign","ChevronRight","StatusAccordion","Accordion","marginTop","SelectedStatus","StatusText","StatusOption","FormControlLabel","QrStatusAccordion","expanded","setExpanded","selectedStatus","setSelectedStatus","handleAccordionChange","isExpanded","AccordionSummary","expandIcon","ExpandMore","minHeight","CheckCircle","AccordionDetails","RadioGroup","target","status","control","Radio","RequestCard","QrCodeRequests","address","date","request","flexShrink","PageContainer","Container","HeaderCard","background","_ref5","ManageQrPos","QrCode","mr","Grid","container","item","xs","md","fullWidth","py","flexFlow"],"sourceRoot":""}